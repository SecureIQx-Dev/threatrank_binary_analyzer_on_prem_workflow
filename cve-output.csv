vendor,product,version,location,cve_number,severity,score,source,cvss_version,cvss_vector,paths,remarks,comments,description,affected_versions
gnu,gcc,4.7.2,NotFound,CVE-2002-2439,HIGH,7.8,NVD,3,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,C:\Users\Rithvik Ganesh\Downloads\elf-Linux-ARMv7-ls.bin,NewFound,,Integer overflow in the new[] operator in gcc before 4.8.0 allows attackers to have unspecified impacts.,< 4.8.0
gnu,gcc,4.7.2,NotFound,CVE-2018-12886,HIGH,8.1,NVD,3,CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,C:\Users\Rithvik Ganesh\Downloads\elf-Linux-ARMv7-ls.bin,NewFound,,"stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",[4.1 - 8.0]
gnu,gcc,4.7.2,NotFound,CVE-2019-15847,HIGH,7.5,NVD,3,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,C:\Users\Rithvik Ganesh\Downloads\elf-Linux-ARMv7-ls.bin,NewFound,,"The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",< 7.5.0
gnu,gcc,4.7.2,NotFound,CVE-2021-37322,HIGH,7.8,NVD,3,CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H,C:\Users\Rithvik Ganesh\Downloads\elf-Linux-ARMv7-ls.bin,NewFound,,GCC c++filt v2.26 was discovered to contain a use-after-free vulnerability via the component cplus-dem.c.,< 10.1
gnu,gcc,4.7.2,NotFound,CVE-2023-4039,MEDIUM,4.8,NVD,3,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N,C:\Users\Rithvik Ganesh\Downloads\elf-Linux-ARMv7-ls.bin,NewFound,,"**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains 
that target AArch64 allows an attacker to exploit an existing buffer 
overflow in dynamically-sized local variables in your application 
without this being detected. This stack-protector failure only applies 
to C99-style dynamically-sized local variables or those created using 
alloca(). The stack-protector operates as intended for statically-sized 
local variables.

The default behavior when the stack-protector 
detects an overflow is to terminate your application, resulting in 
controlled loss of availability. An attacker who can exploit a buffer 
overflow without triggering the stack-protector might be able to change 
program flow control to cause an uncontrolled loss of availability or to
 go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",< 2023-09-12
